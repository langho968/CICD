# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

# Repo Action 페이지에 나타날 이름
name: Spring Boot & Gradle CI/CD

# Event Trigger
# master branch에 push 또는 pull request가 발생할 경우 동작
# branch 단위 외에도, tag나 cron 식 등을 사용할 수 있음
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

#      - name: Make zip file
#        run: zip -r ./$GITHUB_SHA.zip .
#        shell: bash
#
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ap-northeast-2
#
#      - name: Upload to S3
#        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://mulmul/springboot-intro-build.zip
#
#      - name: Code Deploy
#        run: aws deploy create-deployment --application-name mulmul --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name mulmul --s3-location bucket=mulmul,bundleType=zip,key=springboot-intro-build.zip